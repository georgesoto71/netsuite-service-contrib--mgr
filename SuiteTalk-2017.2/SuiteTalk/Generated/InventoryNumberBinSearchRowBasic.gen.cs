//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class InventoryNumberBinSearchRowBasic
    {
        private static readonly Lazy<ColumnFactory> meta = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public void SetColumns(string[] columnNames)
        {
            var factory = meta.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<InventoryNumberBinSearchRowBasic>
        {
            protected override Dictionary<string, Action<InventoryNumberBinSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<InventoryNumberBinSearchRowBasic>> {
                    { "binNumber", r => r.@binNumber = new [] { new SearchColumnSelectField { customLabel = "binNumber" } } },
                    { "inventoryNumber", r => r.@inventoryNumber = new [] { new SearchColumnSelectField { customLabel = "inventoryNumber" } } },
                    { "location", r => r.@location = new [] { new SearchColumnSelectField { customLabel = "location" } } },
                    { "quantityAvailable", r => r.@quantityAvailable = new [] { new SearchColumnDoubleField { customLabel = "quantityAvailable" } } },
                    { "quantityOnHand", r => r.@quantityOnHand = new [] { new SearchColumnDoubleField { customLabel = "quantityOnHand" } } },
                };
            }
        }
    }
}