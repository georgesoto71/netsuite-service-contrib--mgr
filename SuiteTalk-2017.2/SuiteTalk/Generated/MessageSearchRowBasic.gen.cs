//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class MessageSearchRowBasic
    {
        private static readonly Lazy<ColumnFactory> columnFactoryLoader = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public override void SetColumns(string[] columnNames)
        {
            var factory = columnFactoryLoader.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<MessageSearchRowBasic>
        {
            protected override Dictionary<string, Action<MessageSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<MessageSearchRowBasic>> {
                    { "author", r => r.@author = new [] { new SearchColumnSelectField { customLabel = "author" } } },
                    { "authorEmail", r => r.@authorEmail = new [] { new SearchColumnStringField { customLabel = "authorEmail" } } },
                    { "bcc", r => r.@bcc = new [] { new SearchColumnStringField { customLabel = "bcc" } } },
                    { "cc", r => r.@cc = new [] { new SearchColumnStringField { customLabel = "cc" } } },
                    { "externalId", r => r.@externalId = new [] { new SearchColumnSelectField { customLabel = "externalId" } } },
                    { "hasAttachment", r => r.@hasAttachment = new [] { new SearchColumnBooleanField { customLabel = "hasAttachment" } } },
                    { "internalId", r => r.@internalId = new [] { new SearchColumnSelectField { customLabel = "internalId" } } },
                    { "internalOnly", r => r.@internalOnly = new [] { new SearchColumnBooleanField { customLabel = "internalOnly" } } },
                    { "isEmailed", r => r.@isEmailed = new [] { new SearchColumnBooleanField { customLabel = "isEmailed" } } },
                    { "isIncoming", r => r.@isIncoming = new [] { new SearchColumnBooleanField { customLabel = "isIncoming" } } },
                    { "message", r => r.@message = new [] { new SearchColumnStringField { customLabel = "message" } } },
                    { "messageDate", r => r.@messageDate = new [] { new SearchColumnDateField { customLabel = "messageDate" } } },
                    { "messageType", r => r.@messageType = new [] { new SearchColumnEnumSelectField { customLabel = "messageType" } } },
                    { "recipient", r => r.@recipient = new [] { new SearchColumnSelectField { customLabel = "recipient" } } },
                    { "recipientEmail", r => r.@recipientEmail = new [] { new SearchColumnStringField { customLabel = "recipientEmail" } } },
                    { "subject", r => r.@subject = new [] { new SearchColumnStringField { customLabel = "subject" } } },
                };
            }
        }
    }
}