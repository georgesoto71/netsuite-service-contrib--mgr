//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class CouponCodeSearchRowBasic
    {
        private static readonly Lazy<ColumnFactory> columnFactoryLoader = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public override void SetColumns(string[] columnNames)
        {
            var factory = columnFactoryLoader.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<CouponCodeSearchRowBasic>
        {
            protected override Dictionary<string, Action<CouponCodeSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<CouponCodeSearchRowBasic>> {
                    { "code", r => r.@code = new [] { new SearchColumnStringField { customLabel = "code" } } },
                    { "dateSent", r => r.@dateSent = new [] { new SearchColumnDateField { customLabel = "dateSent" } } },
                    { "externalId", r => r.@externalId = new [] { new SearchColumnSelectField { customLabel = "externalId" } } },
                    { "id", r => r.@id = new [] { new SearchColumnLongField { customLabel = "id" } } },
                    { "internalId", r => r.@internalId = new [] { new SearchColumnSelectField { customLabel = "internalId" } } },
                    { "promotion", r => r.@promotion = new [] { new SearchColumnStringField { customLabel = "promotion" } } },
                    { "recipient", r => r.@recipient = new [] { new SearchColumnStringField { customLabel = "recipient" } } },
                    { "useCount", r => r.@useCount = new [] { new SearchColumnLongField { customLabel = "useCount" } } },
                    { "used", r => r.@used = new [] { new SearchColumnBooleanField { customLabel = "used" } } },
                };
            }
        }
    }
}