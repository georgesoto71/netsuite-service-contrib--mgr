//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class AssemblyItemBomSearchRowBasic
    {
        private static readonly Lazy<ColumnFactory> meta = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public void SetColumns(string[] columnNames)
        {
            var factory = meta.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<AssemblyItemBomSearchRowBasic>
        {
            protected override Dictionary<string, Action<AssemblyItemBomSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<AssemblyItemBomSearchRowBasic>> {
                    { "assembly", r => r.@assembly = new [] { new SearchColumnSelectField { customLabel = "assembly" } } },
                    { "billOfMaterials", r => r.@billOfMaterials = new [] { new SearchColumnSelectField { customLabel = "billOfMaterials" } } },
                    { "default", r => r.@default = new [] { new SearchColumnBooleanField { customLabel = "default" } } },
                    { "locations", r => r.@locations = new [] { new SearchColumnSelectField { customLabel = "locations" } } },
                };
            }
        }
    }
}