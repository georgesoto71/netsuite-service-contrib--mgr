
//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class BillingScheduleSearchRowBasic
    {
        // TODO: Make this Lazy and Weak referenced so that it can be garbaged collected
        private static readonly Lazy<ColumnFactory> columnFactoryLoader = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public override void SetColumns(string[] columnNames)
        {
            var factory = columnFactoryLoader.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<BillingScheduleSearchRowBasic>
        {
            protected override Dictionary<string, Action<BillingScheduleSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<BillingScheduleSearchRowBasic>> {
                    { "applyToSubtotal", r => r.@applyToSubtotal = new [] { new SearchColumnBooleanField { customLabel = "applyToSubtotal" } } },
                    { "externalId", r => r.@externalId = new [] { new SearchColumnSelectField { customLabel = "externalId" } } },
                    { "frequency", r => r.@frequency = new [] { new SearchColumnEnumSelectField { customLabel = "frequency" } } },
                    { "inArrears", r => r.@inArrears = new [] { new SearchColumnBooleanField { customLabel = "inArrears" } } },
                    { "initialAmount", r => r.@initialAmount = new [] { new SearchColumnStringField { customLabel = "initialAmount" } } },
                    { "initialTerms", r => r.@initialTerms = new [] { new SearchColumnStringField { customLabel = "initialTerms" } } },
                    { "internalId", r => r.@internalId = new [] { new SearchColumnSelectField { customLabel = "internalId" } } },
                    { "isInactive", r => r.@isInactive = new [] { new SearchColumnBooleanField { customLabel = "isInactive" } } },
                    { "isPublic", r => r.@isPublic = new [] { new SearchColumnBooleanField { customLabel = "isPublic" } } },
                    { "name", r => r.@name = new [] { new SearchColumnStringField { customLabel = "name" } } },
                    { "recurrenceCount", r => r.@recurrenceCount = new [] { new SearchColumnLongField { customLabel = "recurrenceCount" } } },
                    { "recurrencePattern", r => r.@recurrencePattern = new [] { new SearchColumnEnumSelectField { customLabel = "recurrencePattern" } } },
                    { "recurrenceTerms", r => r.@recurrenceTerms = new [] { new SearchColumnStringField { customLabel = "recurrenceTerms" } } },
                    { "repeatEvery", r => r.@repeatEvery = new [] { new SearchColumnLongField { customLabel = "repeatEvery" } } },
                    { "type", r => r.@type = new [] { new SearchColumnEnumSelectField { customLabel = "type" } } },
                };
            }
        }
    }
}