
//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class BillingAccountSearchRowBasic
    {
        // TODO: Make this Lazy and Weak referenced so that it can be garbaged collected
        private static readonly Lazy<ColumnFactory> columnFactoryLoader = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public override void SetColumns(string[] columnNames)
        {
            var factory = columnFactoryLoader.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<BillingAccountSearchRowBasic>
        {
            protected override Dictionary<string, Action<BillingAccountSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<BillingAccountSearchRowBasic>> {
                    { "billingSchedule", r => r.@billingSchedule = new [] { new SearchColumnSelectField { customLabel = "billingSchedule" } } },
                    { "cashSaleForm", r => r.@cashSaleForm = new [] { new SearchColumnSelectField { customLabel = "cashSaleForm" } } },
                    { "class", r => r.@class = new [] { new SearchColumnSelectField { customLabel = "class" } } },
                    { "currency", r => r.@currency = new [] { new SearchColumnSelectField { customLabel = "currency" } } },
                    { "customer", r => r.@customer = new [] { new SearchColumnSelectField { customLabel = "customer" } } },
                    { "customerDefault", r => r.@customerDefault = new [] { new SearchColumnBooleanField { customLabel = "customerDefault" } } },
                    { "dateCreated", r => r.@dateCreated = new [] { new SearchColumnDateField { customLabel = "dateCreated" } } },
                    { "department", r => r.@department = new [] { new SearchColumnSelectField { customLabel = "department" } } },
                    { "externalId", r => r.@externalId = new [] { new SearchColumnSelectField { customLabel = "externalId" } } },
                    { "frequency", r => r.@frequency = new [] { new SearchColumnEnumSelectField { customLabel = "frequency" } } },
                    { "idNumber", r => r.@idNumber = new [] { new SearchColumnStringField { customLabel = "idNumber" } } },
                    { "inactive", r => r.@inactive = new [] { new SearchColumnBooleanField { customLabel = "inactive" } } },
                    { "internalId", r => r.@internalId = new [] { new SearchColumnSelectField { customLabel = "internalId" } } },
                    { "invoiceForm", r => r.@invoiceForm = new [] { new SearchColumnSelectField { customLabel = "invoiceForm" } } },
                    { "lastBillCycleDate", r => r.@lastBillCycleDate = new [] { new SearchColumnDateField { customLabel = "lastBillCycleDate" } } },
                    { "lastBillDate", r => r.@lastBillDate = new [] { new SearchColumnDateField { customLabel = "lastBillDate" } } },
                    { "location", r => r.@location = new [] { new SearchColumnSelectField { customLabel = "location" } } },
                    { "memo", r => r.@memo = new [] { new SearchColumnStringField { customLabel = "memo" } } },
                    { "name", r => r.@name = new [] { new SearchColumnStringField { customLabel = "name" } } },
                    { "nextBillCycleDate", r => r.@nextBillCycleDate = new [] { new SearchColumnDateField { customLabel = "nextBillCycleDate" } } },
                    { "startDate", r => r.@startDate = new [] { new SearchColumnDateField { customLabel = "startDate" } } },
                    { "subsidiary", r => r.@subsidiary = new [] { new SearchColumnSelectField { customLabel = "subsidiary" } } },
                };
            }
        }
    }
}