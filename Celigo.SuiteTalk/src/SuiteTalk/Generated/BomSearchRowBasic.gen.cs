//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class BomSearchRowBasic
    {
        // TODO: Make this Lazy and Weak referenced so that it can be garbaged collected
        private static readonly Lazy<ColumnFactory> columnFactoryLoader = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public override void SetColumns(string[] columnNames)
        {
            var factory = columnFactoryLoader.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<BomSearchRowBasic>
        {
            protected override Dictionary<string, Action<BomSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<BomSearchRowBasic>> {
                    { "availableForAllAssemblies", r => r.@availableForAllAssemblies = new [] { new SearchColumnBooleanField { customLabel = "availableForAllAssemblies" } } },
                    { "availableForAllLocations", r => r.@availableForAllLocations = new [] { new SearchColumnBooleanField { customLabel = "availableForAllLocations" } } },
                    { "createdDate", r => r.@createdDate = new [] { new SearchColumnDateField { customLabel = "createdDate" } } },
                    { "externalId", r => r.@externalId = new [] { new SearchColumnSelectField { customLabel = "externalId" } } },
                    { "includeChildren", r => r.@includeChildren = new [] { new SearchColumnBooleanField { customLabel = "includeChildren" } } },
                    { "internalId", r => r.@internalId = new [] { new SearchColumnSelectField { customLabel = "internalId" } } },
                    { "isInactive", r => r.@isInactive = new [] { new SearchColumnBooleanField { customLabel = "isInactive" } } },
                    { "legacyBomForAssembly", r => r.@legacyBomForAssembly = new [] { new SearchColumnSelectField { customLabel = "legacyBomForAssembly" } } },
                    { "memo", r => r.@memo = new [] { new SearchColumnStringField { customLabel = "memo" } } },
                    { "name", r => r.@name = new [] { new SearchColumnStringField { customLabel = "name" } } },
                    { "restrictToAssemblies", r => r.@restrictToAssemblies = new [] { new SearchColumnSelectField { customLabel = "restrictToAssemblies" } } },
                    { "restrictToLocations", r => r.@restrictToLocations = new [] { new SearchColumnSelectField { customLabel = "restrictToLocations" } } },
                    { "revisionName", r => r.@revisionName = new [] { new SearchColumnStringField { customLabel = "revisionName" } } },
                    { "subsidiary", r => r.@subsidiary = new [] { new SearchColumnSelectField { customLabel = "subsidiary" } } },
                    { "subsidiaryNoHierarchy", r => r.@subsidiaryNoHierarchy = new [] { new SearchColumnSelectField { customLabel = "subsidiaryNoHierarchy" } } },
                    { "useComponentYield", r => r.@useComponentYield = new [] { new SearchColumnBooleanField { customLabel = "useComponentYield" } } },
                    { "usedOnAssembly", r => r.@usedOnAssembly = new [] { new SearchColumnBooleanField { customLabel = "usedOnAssembly" } } },
                };
            }
        }
    }
}