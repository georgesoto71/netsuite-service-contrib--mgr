//~ Generated by SearchStubs/SearchRowBasic

using System;
using System.Collections.Generic;

namespace SuiteTalk
{
    partial class EntityTaxRegistrationSearchRowBasic
    {
        // TODO: Make this Lazy and Weak referenced so that it can be garbaged collected
        private static readonly Lazy<ColumnFactory> columnFactoryLoader = new Lazy<ColumnFactory>(() => new ColumnFactory());

        public override void SetColumns(string[] columnNames)
        {
            var factory = columnFactoryLoader.Value;
            for (int i = 0; i < columnNames.Length; i++)
            {
                factory.BuildColumn(this, columnNames[i]);
            }
        }

        class ColumnFactory:  ColumnFactory<EntityTaxRegistrationSearchRowBasic>
        {
            protected override Dictionary<string, Action<EntityTaxRegistrationSearchRowBasic>> InitializeColumnBuilders()
            {
                return new Dictionary<string, Action<EntityTaxRegistrationSearchRowBasic>> {
                    { "address", r => r.@address = new [] { new SearchColumnSelectField { customLabel = "address" } } },
                    { "id", r => r.@id = new [] { new SearchColumnLongField { customLabel = "id" } } },
                    { "nexusCountry", r => r.@nexusCountry = new [] { new SearchColumnEnumSelectField { customLabel = "nexusCountry" } } },
                    { "taxRegistrationNumber", r => r.@taxRegistrationNumber = new [] { new SearchColumnStringField { customLabel = "taxRegistrationNumber" } } },
                };
            }
        }
    }
}